<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2014-07-22 19:02:51                    *
 *   This file is autogenerated - do not edit.                               *
 *****************************************************************************/

	abstract class AutoBackendUser extends BaseEntity
	{
		protected $email = null;
		protected $login = null;
		protected $password = null;
		protected $lastName = null;
		protected $firstName = null;
		protected $midName = null;
		protected $mobilePhone = null;
		protected $workPhone = null;
		protected $gender = 'u';
		protected $textShort = null;
		protected $text = null;
		protected $isSuperAdmin = false;
		protected $accessRoles = null;
		
		public function getEmail()
		{
			return $this->email;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setEmail($email)
		{
			$this->email = $email;
			
			return $this;
		}
		
		public function getLogin()
		{
			return $this->login;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setLogin($login)
		{
			$this->login = $login;
			
			return $this;
		}
		
		public function getPassword()
		{
			return $this->password;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setPassword($password)
		{
			$this->password = $password;
			
			return $this;
		}
		
		public function getLastName()
		{
			return $this->lastName;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setLastName($lastName)
		{
			$this->lastName = $lastName;
			
			return $this;
		}
		
		public function getFirstName()
		{
			return $this->firstName;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setFirstName($firstName)
		{
			$this->firstName = $firstName;
			
			return $this;
		}
		
		public function getMidName()
		{
			return $this->midName;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setMidName($midName)
		{
			$this->midName = $midName;
			
			return $this;
		}
		
		public function getMobilePhone()
		{
			return $this->mobilePhone;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setMobilePhone($mobilePhone)
		{
			$this->mobilePhone = $mobilePhone;
			
			return $this;
		}
		
		public function getWorkPhone()
		{
			return $this->workPhone;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setWorkPhone($workPhone)
		{
			$this->workPhone = $workPhone;
			
			return $this;
		}
		
		public function getGender()
		{
			return $this->gender;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setGender($gender)
		{
			$this->gender = $gender;
			
			return $this;
		}
		
		public function getTextShort()
		{
			return $this->textShort;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setTextShort($textShort)
		{
			$this->textShort = $textShort;
			
			return $this;
		}
		
		public function getText()
		{
			return $this->text;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setText($text)
		{
			$this->text = $text;
			
			return $this;
		}
		
		public function getIsSuperAdmin()
		{
			return $this->isSuperAdmin;
		}
		
		public function isIsSuperAdmin()
		{
			return $this->isSuperAdmin;
		}
		
		/**
		 * @return BackendUser
		**/
		public function setIsSuperAdmin($isSuperAdmin = null)
		{
			Assert::isTernaryBase($isSuperAdmin);
			
			$this->isSuperAdmin = $isSuperAdmin;
			
			return $this;
		}
		
		/**
		 * @return BackendUserAccessRolesDAO
		**/
		public function getAccessRoles($lazy = false)
		{
			if (!$this->accessRoles || ($this->accessRoles->isLazy() != $lazy)) {
				$this->accessRoles = new BackendUserAccessRolesDAO($this, $lazy);
			}
			
			return $this->accessRoles;
		}
		
		/**
		 * @return BackendUser
		**/
		public function fillAccessRoles($collection, $lazy = false)
		{
			$this->accessRoles = new BackendUserAccessRolesDAO($this, $lazy);
			
			if (!$this->id) {
				throw new WrongStateException(
					'i do not know which object i belong to'
				);
			}
			
			$this->accessRoles->mergeList($collection);
			
			return $this;
		}
	}
?>