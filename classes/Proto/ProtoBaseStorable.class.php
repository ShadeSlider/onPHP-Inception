<?php
/*****************************************************************************
 *   Copyright (C) 2006-2009, onPHP's MetaConfiguration Builder.             *
 *   Generated by onPHP-1.1.master at 2014-06-24 09:09:03                    *
 *   This file will never be generated again - feel free to edit.            *
 *****************************************************************************/

class ProtoBaseStorable extends AutoProtoBaseStorable {

	protected $fieldLabels = array();
	protected $formPartFieldNames = array();

	const PHONE_PATTERN = '/\+7 \([\d]{3}\) [\d]{3}-[\d]{2}-[\d]{2}/';

	public function getFieldLabels()
	{
		return $this->fieldLabels;
	}

	public function getFieldLabel($name)
	{
		return isset($this->fieldLabels[$name]) ? $this->fieldLabels[$name] : '';
	}

	public function makeForm($prefix = null)
	{
		$form = parent::makeForm($prefix);

		FormUtilsExtended::applyImportFiltersToForm($form);

		if ($form->exists('email')) {
			$form->get('email')->setAllowedPAttern(PrimitiveString::MAIL_PATTERN);
		}

		return $form;
	}

	public function makeFormImport($prefix = null)
	{
		$form = $this->makeForm($prefix);
		return FormUtilsExtended::clipForm($form, $this->formPartFieldNames['import']);
	}

	protected function markPrimitiveMissingIfEmpty($field, Form $form)
	{
		if (!$form->getValue($field)) {
			$form->markMissing($field);
		}

		return $form;
	}

	protected function markPrimitiveGoodIfEmpty($field, Form $form)
	{
		if (!$form->getValue($field)) {
			$form->markGood($field);
		}

		return $form;
	}
}